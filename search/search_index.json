{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"$ pip install clickuz ---> 100% $ pip install django ---> 100% $ pip install djangorestframework ---> 100%","title":"Kirish"},{"location":"check_order/","text":"Buyurtmani tekshirsh \u00b6 Bizaga kelgan buyurtmani tekshirishimza kerak ClickUz klassini davom etirb undan check_order va successfully_payment ni davom etiramiza check_order funksiyadan bizaga buyurtmaning raqami keladi va narxi biza buyurtma bor yoki yoligini tekshirishmiza kerak va narxi narxiga tori keldimi yoki yomi.Pasdigi 3ta variantdan bitasini qaytarishimiza kerak #check_order ORDER_FOUND = # buyurtma topildi xammasi yaxwi ORDER_NOT_FOUND = # buyurtma topilmadi INVALID_AMOUNT = # buyurtma topildi narxi tori kelmadi Successfully_payment Bu funkisiyada bizaga puli tolangan buyurtmaning idsi beradi va transaction klassini objecti. views.py from clickuz.views import ClickUzMerchantAPIView from clickuz.clickuz import ClickUz class OrderCheckAndPayment ( ClickUz ): def check_order ( self , order_id : str , amount : str ): return self . ORDER_FOUND def successfully_payment ( self , order_id : str , transaction : object ): print ( order_id ) class TestView ( ClickUzMerchantAPIView ): VALIDATE_CLASS = OrderCheckAndPayment urls.py from django.urls import path urlpatterns = [ path ( 'click/transaction/' , TestView . as_view ()) ] Viewni url ga qoshdik endi click.exe programmasi bilan test qilb korsak boladi ClickUz application ClickUz Documentation","title":"Buyurtmani tekshirish"},{"location":"check_order/#buyurtmani-tekshirsh","text":"Bizaga kelgan buyurtmani tekshirishimza kerak ClickUz klassini davom etirb undan check_order va successfully_payment ni davom etiramiza check_order funksiyadan bizaga buyurtmaning raqami keladi va narxi biza buyurtma bor yoki yoligini tekshirishmiza kerak va narxi narxiga tori keldimi yoki yomi.Pasdigi 3ta variantdan bitasini qaytarishimiza kerak #check_order ORDER_FOUND = # buyurtma topildi xammasi yaxwi ORDER_NOT_FOUND = # buyurtma topilmadi INVALID_AMOUNT = # buyurtma topildi narxi tori kelmadi Successfully_payment Bu funkisiyada bizaga puli tolangan buyurtmaning idsi beradi va transaction klassini objecti. views.py from clickuz.views import ClickUzMerchantAPIView from clickuz.clickuz import ClickUz class OrderCheckAndPayment ( ClickUz ): def check_order ( self , order_id : str , amount : str ): return self . ORDER_FOUND def successfully_payment ( self , order_id : str , transaction : object ): print ( order_id ) class TestView ( ClickUzMerchantAPIView ): VALIDATE_CLASS = OrderCheckAndPayment urls.py from django.urls import path urlpatterns = [ path ( 'click/transaction/' , TestView . as_view ()) ] Viewni url ga qoshdik endi click.exe programmasi bilan test qilb korsak boladi ClickUz application ClickUz Documentation","title":"Buyurtmani tekshirsh"},{"location":"generate_url/","text":"Url yaratish \u00b6 Click.uz saytiga yuborish uchun biza url yaratishmiza kerak bu url klientga korsatiladi va urlga kirganida klient pul tolash qismiga otib ketadi from clickuz import ClickUz url = ClickUz . generate_url ( order_id = '172' , amount = '150000' ) print ( url ) Return_url Agar klient pul tolab bolganidan keyn saytga qaytib kelishini xoxlasangiz return_url ga ozingizni domain qoshib qoyishiz kerak boladi from clickuz import ClickUz url = ClickUz . generate_url ( order_id = '172' , amount = '150000' , return_url = 'http://example.com' ) print ( url ) Klient pul tolab bolganidan keyn sizning saytizga qaytib keladi","title":"Url yaratish"},{"location":"generate_url/#url-yaratish","text":"Click.uz saytiga yuborish uchun biza url yaratishmiza kerak bu url klientga korsatiladi va urlga kirganida klient pul tolash qismiga otib ketadi from clickuz import ClickUz url = ClickUz . generate_url ( order_id = '172' , amount = '150000' ) print ( url ) Return_url Agar klient pul tolab bolganidan keyn saytga qaytib kelishini xoxlasangiz return_url ga ozingizni domain qoshib qoyishiz kerak boladi from clickuz import ClickUz url = ClickUz . generate_url ( order_id = '172' , amount = '150000' , return_url = 'http://example.com' ) print ( url ) Klient pul tolab bolganidan keyn sizning saytizga qaytib keladi","title":"Url yaratish"},{"location":"getting_started/","text":"Ishni boshlash \u00b6 O'rtanib olganimizdan song settins.py ga o'rnatilgan to'plami qo'shib qoyish kerak va click.uz dan olgan merchant_id , service_id , secret_key ni yozib qoyishimiza kerak INSTALLED_APPS = [ ... , 'clickuz' , 'rest_framework' ] CLICK_SETTINGS = { 'service_id' : '1' , 'merchant_id' : '1' , 'secret_key' : '1' } undan song quydagi komandani bajarishimiza kerak yani bazani migrate qilb olish kerak python manage.py migrate","title":"Ishni boshlash"},{"location":"getting_started/#ishni-boshlash","text":"O'rtanib olganimizdan song settins.py ga o'rnatilgan to'plami qo'shib qoyish kerak va click.uz dan olgan merchant_id , service_id , secret_key ni yozib qoyishimiza kerak INSTALLED_APPS = [ ... , 'clickuz' , 'rest_framework' ] CLICK_SETTINGS = { 'service_id' : '1' , 'merchant_id' : '1' , 'secret_key' : '1' } undan song quydagi komandani bajarishimiza kerak yani bazani migrate qilb olish kerak python manage.py migrate","title":"Ishni boshlash"}]}